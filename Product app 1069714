class ProductApp:
    def __init__(self):
        # Initialize an empty dictionary to store products
        self.products = {}

    def add_product(self, pid, name, category, price):
        if pid in self.products:
            print(f"Product with id {pid} already exists.")
        else:
            self.products[pid] = {
                "name": name,
                "category": category,
                "price": price
            }
            print(f"Product {name} added successfully.")

    def update_product(self, pid, name=None, category=None, price=None):
        if pid in self.products:
            if name:
                self.products[pid]['name'] = name
            if category:
                self.products[pid]['category'] = category
            if price:
                self.products[pid]['price'] = price
            print(f"Product with id {pid} updated successfully.")
        else:
            print(f"Product with id {pid} does not exist.")

    def delete_product(self, pid):
        if pid in self.products:
            del self.products[pid]
            print(f"Product with id {pid} deleted successfully.")
        else:
            print(f"Product with id {pid} does not exist.")

    def get_product_by_pid(self, pid):
        product = self.products.get(pid)
        if product:
            print(f"Product {pid}: {product}")
        else:
            print(f"Product with id {pid} not found.")

    def get_all_products(self):
        if self.products:
            for pid, product in self.products.items():
                print(f"Product {pid}: {product}")
        else:
            print("No products found.")

    def get_products_by_category(self, category):
        found = False
        for product in self.products.values():
            if product['category'] == category:
                print(product)
                found = True
        if not found:
            print(f"No products found in category {category}")

    def get_products_between_prices(self, low, high):
        found = False
        for product in self.products.values():
            if low <= product['price'] <= high:
                print(product)
                found = True
        if not found:
            print(f"No products found between prices {low} and {high}")


def main():
    app = ProductApp()

    while True:
        print("\nProduct Management Menu")
        print("1. Add Product")
        print("2. Update Product")
        print("3. Delete Product")
        print("4. Get Product by ID")
        print("5. Get All Products")
        print("6. Get Products by Category")
        print("7. Get Products between Prices")
        print("8. Exit")

        choice = input("Select an option: ")

        if choice == "1":
            pid = input("Enter Product ID: ")
            name = input("Enter Product Name: ")
            category = input("Enter Product Category: ")
            price = float(input("Enter Product Price: "))
            app.add_product(pid, name, category, price)

        elif choice == "2":
            pid = input("Enter Product ID to update: ")
            name = input("Enter new Product Name (leave blank to skip): ") or None
            category = input("Enter new Product Category (leave blank to skip): ") or None
            price = input("Enter new Product Price (leave blank to skip): ")
            price = float(price) if price else None
            app.update_product(pid, name, category, price)

        elif choice == "3":
            pid = input("Enter Product ID to delete: ")
            app.delete_product(pid)

        elif choice == "4":
            pid = input("Enter Product ID to retrieve: ")
            app.get_product_by_pid(pid)

        elif choice == "5":
            app.get_all_products()

        elif choice == "6":
            category = input("Enter Product Category to search: ")
            app.get_products_by_category(category)

        elif choice == "7":
            low = float(input("Enter lower price range: "))
            high = float(input("Enter higher price range: "))
            app.get_products_between_prices(low, high)

        elif choice == "8":
            print("Exiting the program...")
            break

        else:
            print("Invalid option, please try again.")


if __â¬¤
